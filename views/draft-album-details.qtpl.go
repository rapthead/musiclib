// Code generated by qtc from "draft-album-details.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line draft-album-details.qtpl:1
package views

//line draft-album-details.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line draft-album-details.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line draft-album-details.qtpl:2
type AlbumData interface {
	Title() StrInputData
	TitleSuggestion() string

	Path() string
	Artist() StrDatalistInputData
	Type() SelectInputData
	DownloadSource() SelectInputData
	SourceURL() StrInputData
	Barcode() StrInputData
	Comment() StrInputData
	Year() IntInputData
	ReleaseYear() IntInputData
}

type TrackData interface {
	Title() StrInputData
	TitleSuggestion() string

	Path() string
	TrackArtist() StrInputData
	Disc() IntInputData
	TrackNum() IntInputData
}

type CoverData interface {
	Filename() string
	URL() string
	Sort() IntInputData
	Type() SelectInputData
	Delete() CheckboxInputData
}

type DraftAlbumDetailsPage struct {
	Error  error
	Album  AlbumData
	Tracks []TrackData
	Covers []CoverData
}

//line draft-album-details.qtpl:43
func (p *DraftAlbumDetailsPage) StreamTitle(qw422016 *qt422016.Writer) {
//line draft-album-details.qtpl:43
	qw422016.N().S(`
    Draft albums
`)
//line draft-album-details.qtpl:45
}

//line draft-album-details.qtpl:45
func (p *DraftAlbumDetailsPage) WriteTitle(qq422016 qtio422016.Writer) {
//line draft-album-details.qtpl:45
	qw422016 := qt422016.AcquireWriter(qq422016)
//line draft-album-details.qtpl:45
	p.StreamTitle(qw422016)
//line draft-album-details.qtpl:45
	qt422016.ReleaseWriter(qw422016)
//line draft-album-details.qtpl:45
}

//line draft-album-details.qtpl:45
func (p *DraftAlbumDetailsPage) Title() string {
//line draft-album-details.qtpl:45
	qb422016 := qt422016.AcquireByteBuffer()
//line draft-album-details.qtpl:45
	p.WriteTitle(qb422016)
//line draft-album-details.qtpl:45
	qs422016 := string(qb422016.B)
//line draft-album-details.qtpl:45
	qt422016.ReleaseByteBuffer(qb422016)
//line draft-album-details.qtpl:45
	return qs422016
//line draft-album-details.qtpl:45
}

//line draft-album-details.qtpl:47
func (p *DraftAlbumDetailsPage) StreamBody(qw422016 *qt422016.Writer) {
//line draft-album-details.qtpl:47
	qw422016.N().S(`
    <style>
        .cover-filename {
            word-break: break-all;
        }
    </style>
    <form id="draft-album-detail-form" class="container" method="POST" enctype="multipart/form-data">
        `)
//line draft-album-details.qtpl:54
	if p.Error != nil {
//line draft-album-details.qtpl:54
		qw422016.N().S(`
        <div class="card-panel red white-text" id="error">
            `)
//line draft-album-details.qtpl:56
		qw422016.E().S(p.Error.Error())
//line draft-album-details.qtpl:56
		qw422016.N().S(`
        </div>
        `)
//line draft-album-details.qtpl:58
	}
//line draft-album-details.qtpl:58
	qw422016.N().S(`
        <div class="card">
            <div class="row">
                `)
//line draft-album-details.qtpl:62
	streammakeStrDatalistInput(qw422016, strDatalistInputConfig{
		wraperClass: "col s6",
		label:       "Artist",
		required:    true,

		data: p.Album.Artist(),
	})
//line draft-album-details.qtpl:69
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:72
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Title",
		required:    true,

		data:       p.Album.Title(),
		helperText: p.Album.TitleSuggestion(),
	})
//line draft-album-details.qtpl:80
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:83
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		disabled:    true,
		label:       "Path",

		data: StrInputData{
			Value: p.Album.Path(),
		},
	})
//line draft-album-details.qtpl:92
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:95
	streammakeIntInput(qw422016, intInputConfig{
		wraperClass: "col s6",
		label:       "Year",
		required:    true,

		data: p.Album.Year(),
		min:  takeIntPtr(1990),
	})
//line draft-album-details.qtpl:103
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:106
	streammakeIntInput(qw422016, intInputConfig{
		wraperClass: "col s6",
		label:       "Release year",

		data: p.Album.ReleaseYear(),
		min:  takeIntPtr(1990),
	})
//line draft-album-details.qtpl:113
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:116
	streammakeSelect(qw422016, selectConfig{
		wraperClass: "col s6",
		label:       "Type",
		required:    true,

		data: p.Album.Type(),
	})
//line draft-album-details.qtpl:123
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:126
	streammakeSelect(qw422016, selectConfig{
		wraperClass: "col s6",
		label:       "Download source",
		required:    true,

		data: p.Album.DownloadSource(),
	})
//line draft-album-details.qtpl:133
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:136
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Source url",

		data: p.Album.SourceURL(),
	})
//line draft-album-details.qtpl:142
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:145
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Barcode",

		data: p.Album.Barcode(),
	})
//line draft-album-details.qtpl:151
	qw422016.N().S(`

                `)
//line draft-album-details.qtpl:154
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Comment",

		data: p.Album.Comment(),
	})
//line draft-album-details.qtpl:160
	qw422016.N().S(`
            </div>
        </div>

        <style>
            .tracks-table td,
            .tracks-table th {
                vertical-align: top;
            }
        </style>

        <div class="card">
            <table class="tracks-table">
                <!--thead>
                    <tr>
                        <th>Path</th>
                        <th>Title</th>
                        <th></th>
                    </tr>
                </thead-->

                <tbody>
                    `)
//line draft-album-details.qtpl:182
	for _, t := range p.Tracks {
//line draft-album-details.qtpl:182
		qw422016.N().S(`
                    <tr>
                        <th>
                            `)
//line draft-album-details.qtpl:186
		streammakeStrInput(qw422016, strInputConfig{
			label:    "Path",
			disabled: true,

			data: StrInputData{
				Value: t.Path(),
			},
		})
//line draft-album-details.qtpl:194
		qw422016.N().S(`
                        </th>
                        <td>
                            `)
//line draft-album-details.qtpl:198
		streammakeStrInput(qw422016, strInputConfig{
			label:    "Title",
			required: true,

			data:       t.Title(),
			helperText: t.TitleSuggestion(),
		})
//line draft-album-details.qtpl:205
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line draft-album-details.qtpl:209
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Track number",
			required: true,

			min:  takeIntPtr(0),
			data: t.TrackNum(),
		})
//line draft-album-details.qtpl:216
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line draft-album-details.qtpl:220
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Disc number",
			required: true,

			min:  takeIntPtr(1),
			data: t.Disc(),
		})
//line draft-album-details.qtpl:227
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line draft-album-details.qtpl:231
		streammakeStrInput(qw422016, strInputConfig{
			label: "TrackArtist",

			data: t.TrackArtist(),
		})
//line draft-album-details.qtpl:236
		qw422016.N().S(`
                        </td>
                    </tr>
                    `)
//line draft-album-details.qtpl:239
	}
//line draft-album-details.qtpl:239
	qw422016.N().S(`
                </tbody>
            </table>
        </div>

        <div class="card">
            <div class="row">
            `)
//line draft-album-details.qtpl:246
	for i, c := range p.Covers {
//line draft-album-details.qtpl:246
		qw422016.N().S(`
                `)
//line draft-album-details.qtpl:247
		if i%2 == 0 {
//line draft-album-details.qtpl:247
			qw422016.N().S(`
                <div class="clearfix"></div>
                `)
//line draft-album-details.qtpl:249
		}
//line draft-album-details.qtpl:249
		qw422016.N().S(`
                <div class ="col s6">
                    <div class="row">
                        <div class="col s6">
                            <img class="materialboxed responsive-img" src="`)
//line draft-album-details.qtpl:253
		qw422016.E().S(c.URL())
//line draft-album-details.qtpl:253
		qw422016.N().S(`" />
                        </div>

                        <div class="col s6">
                            <div class="row">
                                <div class="col s12">
                                    <h4 class="cover-filename">`)
//line draft-album-details.qtpl:259
		qw422016.E().S(c.Filename())
//line draft-album-details.qtpl:259
		qw422016.N().S(`</h4>
                                </div>

                                <div class="col s6">
                                    `)
//line draft-album-details.qtpl:264
		streammakeSelect(qw422016, selectConfig{
			label: "Cover type",

			data: c.Type(),
		})
//line draft-album-details.qtpl:269
		qw422016.N().S(`
                                </div>

                                <div class="col s6">
                                    `)
//line draft-album-details.qtpl:274
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Sort",
			required: true,
			min:      takeIntPtr(1),

			data: c.Sort(),
		})
//line draft-album-details.qtpl:281
		qw422016.N().S(`
                                </div>

                                <div class="col s12">
                                    <label>
                                        <input
                                            type="checkbox"
                                            name="`)
//line draft-album-details.qtpl:288
		qw422016.E().S(c.Delete().Name)
//line draft-album-details.qtpl:288
		qw422016.N().S(`"
                                            value="`)
//line draft-album-details.qtpl:289
		qw422016.E().S(c.Delete().Value)
//line draft-album-details.qtpl:289
		qw422016.N().S(`"
                                        />
                                        <span>Delete</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `)
//line draft-album-details.qtpl:298
	}
//line draft-album-details.qtpl:298
	qw422016.N().S(`
            </div>
        </div>

        <div class="card" id="covers">
            <div class="row">
                <div class="col s12">
                    <div class="file-field input-field">
                        <div class="btn">
                            <span>Upload files</span>
                            <input
                                type="file"
                                name="covers"
                                accept="image/jpeg, image/png"
                                multiple
                            >
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <footer class="row" id="footer">
            <div class="col s6">
                <button
                    class="btn waves-effect waves-light red"
                    type="submit"
                    name="delete"
                    formnovalidate
                >
                    Delete
                    <i class="material-delete right"></i>
                </button>
            </div>

            <div class="col s3 right-align">
                <button
                    class="btn waves-effect waves-light"
                    type="submit"
                    name="commit"
                >
                    Commit
                    <i class="material-icons right"></i>
                </button>
            </div>

            <div class="col s3 right-align">
                <button class="btn waves-effect waves-light" type="submit" formnovalidate>
                    Save
                    <i class="material-icons right"></i>
                </button>
            </div>
        </footer>
    </form>
`)
//line draft-album-details.qtpl:355
}

//line draft-album-details.qtpl:355
func (p *DraftAlbumDetailsPage) WriteBody(qq422016 qtio422016.Writer) {
//line draft-album-details.qtpl:355
	qw422016 := qt422016.AcquireWriter(qq422016)
//line draft-album-details.qtpl:355
	p.StreamBody(qw422016)
//line draft-album-details.qtpl:355
	qt422016.ReleaseWriter(qw422016)
//line draft-album-details.qtpl:355
}

//line draft-album-details.qtpl:355
func (p *DraftAlbumDetailsPage) Body() string {
//line draft-album-details.qtpl:355
	qb422016 := qt422016.AcquireByteBuffer()
//line draft-album-details.qtpl:355
	p.WriteBody(qb422016)
//line draft-album-details.qtpl:355
	qs422016 := string(qb422016.B)
//line draft-album-details.qtpl:355
	qt422016.ReleaseByteBuffer(qb422016)
//line draft-album-details.qtpl:355
	return qs422016
//line draft-album-details.qtpl:355
}
