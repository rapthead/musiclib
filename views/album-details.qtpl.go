// Code generated by qtc from "album-details.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line album-details.qtpl:1
package views

//line album-details.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line album-details.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line album-details.qtpl:2
type AlbumData interface {
	MergeURL() string

	IsDraft() bool
	State() SelectInputData

	Title() StrInputData
	TitleSuggestion() string

	Path() string
	Artist() StrDatalistInputData
	Type() SelectInputData
	DownloadSource() SelectInputData
	SourceURL() StrInputData
	Barcode() StrInputData
	Comment() StrInputData
	Year() IntInputData
	ReleaseYear() IntInputData
}

type TrackData interface {
	Title() StrInputData
	TitleSuggestion() string

	Path() string
	TrackArtist() StrInputData
	Disc() IntInputData
	TrackNum() IntInputData
}

type CoverData interface {
	Filename() string
	URL() string
	Sort() IntInputData
	Type() SelectInputData
	Delete() CheckboxInputData
}

type ReleaseData interface {
	Label() StrDatalistInputData
	CatalogNum() StrInputData
	Delete() *CheckboxInputData
}

type AlbumDetailsPage struct {
	Error       error
	ReleaseInfo []ReleaseData
	Album       AlbumData
	Tracks      []TrackData
	Covers      []CoverData
}

//line album-details.qtpl:55
func (p *AlbumDetailsPage) StreamTitle(qw422016 *qt422016.Writer) {
//line album-details.qtpl:55
	qw422016.N().S(`
    Album details
`)
//line album-details.qtpl:57
}

//line album-details.qtpl:57
func (p *AlbumDetailsPage) WriteTitle(qq422016 qtio422016.Writer) {
//line album-details.qtpl:57
	qw422016 := qt422016.AcquireWriter(qq422016)
//line album-details.qtpl:57
	p.StreamTitle(qw422016)
//line album-details.qtpl:57
	qt422016.ReleaseWriter(qw422016)
//line album-details.qtpl:57
}

//line album-details.qtpl:57
func (p *AlbumDetailsPage) Title() string {
//line album-details.qtpl:57
	qb422016 := qt422016.AcquireByteBuffer()
//line album-details.qtpl:57
	p.WriteTitle(qb422016)
//line album-details.qtpl:57
	qs422016 := string(qb422016.B)
//line album-details.qtpl:57
	qt422016.ReleaseByteBuffer(qb422016)
//line album-details.qtpl:57
	return qs422016
//line album-details.qtpl:57
}

//line album-details.qtpl:59
func (p *AlbumDetailsPage) StreamBody(qw422016 *qt422016.Writer) {
//line album-details.qtpl:59
	qw422016.N().S(`
    <style>
        .cover-filename {
            word-break: break-all;
        }
    </style>
    <form id="draft-album-detail-form" class="container" method="POST" enctype="multipart/form-data">
        `)
//line album-details.qtpl:66
	if p.Error != nil {
//line album-details.qtpl:66
		qw422016.N().S(`
        <div class="card-panel red white-text" id="error">
            `)
//line album-details.qtpl:68
		qw422016.E().S(p.Error.Error())
//line album-details.qtpl:68
		qw422016.N().S(`
        </div>
        `)
//line album-details.qtpl:70
	}
//line album-details.qtpl:70
	qw422016.N().S(`
        <div class="card">
            <div class="row">
                `)
//line album-details.qtpl:74
	streammakeSelect(qw422016, selectConfig{
		wraperClass: "col s6",
		label:       "State",
		required:    true,

		data: p.Album.State(),
	})
//line album-details.qtpl:81
	qw422016.N().S(`

                `)
//line album-details.qtpl:84
	streammakeStrDatalistInput(qw422016, strDatalistInputConfig{
		wraperClass: "col s6",
		label:       "Artist",
		required:    true,

		data: p.Album.Artist(),
	})
//line album-details.qtpl:91
	qw422016.N().S(`

                `)
//line album-details.qtpl:94
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Title",
		required:    true,

		data:       p.Album.Title(),
		helperText: p.Album.TitleSuggestion(),
	})
//line album-details.qtpl:102
	qw422016.N().S(`

                `)
//line album-details.qtpl:105
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		disabled:    true,
		label:       "Path",

		data: StrInputData{
			Value: p.Album.Path(),
		},
	})
//line album-details.qtpl:114
	qw422016.N().S(`

                `)
//line album-details.qtpl:117
	streammakeIntInput(qw422016, intInputConfig{
		wraperClass: "col s6",
		label:       "Year",
		required:    true,

		data: p.Album.Year(),
		min:  takeIntPtr(1990),
	})
//line album-details.qtpl:125
	qw422016.N().S(`

                `)
//line album-details.qtpl:128
	streammakeIntInput(qw422016, intInputConfig{
		wraperClass: "col s6",
		label:       "Release year",

		data: p.Album.ReleaseYear(),
		min:  takeIntPtr(1990),
	})
//line album-details.qtpl:135
	qw422016.N().S(`

                `)
//line album-details.qtpl:138
	streammakeSelect(qw422016, selectConfig{
		wraperClass: "col s6",
		label:       "Type",
		required:    true,

		data: p.Album.Type(),
	})
//line album-details.qtpl:145
	qw422016.N().S(`

                `)
//line album-details.qtpl:148
	streammakeSelect(qw422016, selectConfig{
		wraperClass: "col s6",
		label:       "Download source",
		required:    true,

		data: p.Album.DownloadSource(),
	})
//line album-details.qtpl:155
	qw422016.N().S(`

                `)
//line album-details.qtpl:158
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Source url",

		data: p.Album.SourceURL(),
	})
//line album-details.qtpl:164
	qw422016.N().S(`

                `)
//line album-details.qtpl:167
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Barcode",

		data: p.Album.Barcode(),
	})
//line album-details.qtpl:173
	qw422016.N().S(`

                `)
//line album-details.qtpl:176
	streammakeStrInput(qw422016, strInputConfig{
		wraperClass: "col s6",
		label:       "Comment",

		data: p.Album.Comment(),
	})
//line album-details.qtpl:182
	qw422016.N().S(`
            </div>
        </div>

        <div class="card" id="release">
            `)
//line album-details.qtpl:187
	for _, r := range p.ReleaseInfo {
//line album-details.qtpl:187
		qw422016.N().S(`
            <div class="label-row row">
                `)
//line album-details.qtpl:190
		streammakeStrDatalistInput(qw422016, strDatalistInputConfig{
			wraperClass: "col s5",
			label:       "Label",

			data: r.Label(),
		})
//line album-details.qtpl:196
		qw422016.N().S(`

                `)
//line album-details.qtpl:199
		streammakeStrInput(qw422016, strInputConfig{
			wraperClass: "col s5",
			label:       "Catalog number",

			data: r.CatalogNum(),
		})
//line album-details.qtpl:205
		qw422016.N().S(`

                `)
//line album-details.qtpl:207
		deleteCtl := r.Delete()

//line album-details.qtpl:207
		qw422016.N().S(`
                `)
//line album-details.qtpl:208
		if deleteCtl != nil {
//line album-details.qtpl:208
			qw422016.N().S(`
                <div class="col s2">
                    <label>
                        <input
                            type="checkbox"
                            name="`)
//line album-details.qtpl:213
			qw422016.E().S((*deleteCtl).Name)
//line album-details.qtpl:213
			qw422016.N().S(`"
                            value="`)
//line album-details.qtpl:214
			qw422016.E().S((*deleteCtl).Value)
//line album-details.qtpl:214
			qw422016.N().S(`"
                        />
                        <span>Delete</span>
                    </label>
                </div>
                `)
//line album-details.qtpl:219
		}
//line album-details.qtpl:219
		qw422016.N().S(`
            </div>
            `)
//line album-details.qtpl:221
	}
//line album-details.qtpl:221
	qw422016.N().S(`

            <script>
                function deleteLabel(e) {
                    e.target.closest('.label-row').remove()
                }

                document.addEventListener('DOMContentLoaded', function() {
                    const deleteButtons = document.querySelectorAll('#release .delete-button')
                    for (const button of deleteButtons) {
                        button.onclick = deleteLabel
                    }
                });
            </script>
        </div>

        <style>
            .tracks-table td,
            .tracks-table th {
                vertical-align: top;
            }
        </style>

        <div class="card">
            <table class="tracks-table">
                <!--thead>
                    <tr>
                        <th>Path</th>
                        <th>Title</th>
                        <th></th>
                    </tr>
                </thead-->

                <tbody>
                    `)
//line album-details.qtpl:255
	for _, t := range p.Tracks {
//line album-details.qtpl:255
		qw422016.N().S(`
                    <tr>
                        <th>
                            `)
//line album-details.qtpl:259
		streammakeStrInput(qw422016, strInputConfig{
			label:    "Path",
			disabled: true,

			data: StrInputData{
				Value: t.Path(),
			},
		})
//line album-details.qtpl:267
		qw422016.N().S(`
                        </th>
                        <td>
                            `)
//line album-details.qtpl:271
		streammakeStrInput(qw422016, strInputConfig{
			label:    "Title",
			required: true,

			data:       t.Title(),
			helperText: t.TitleSuggestion(),
		})
//line album-details.qtpl:278
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line album-details.qtpl:282
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Track number",
			required: true,

			min:  takeIntPtr(0),
			data: t.TrackNum(),
		})
//line album-details.qtpl:289
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line album-details.qtpl:293
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Disc number",
			required: true,

			min:  takeIntPtr(1),
			data: t.Disc(),
		})
//line album-details.qtpl:300
		qw422016.N().S(`
                        </td>
                        <td>
                            `)
//line album-details.qtpl:304
		streammakeStrInput(qw422016, strInputConfig{
			label: "TrackArtist",

			data: t.TrackArtist(),
		})
//line album-details.qtpl:309
		qw422016.N().S(`
                        </td>
                    </tr>
                    `)
//line album-details.qtpl:312
	}
//line album-details.qtpl:312
	qw422016.N().S(`
                </tbody>
            </table>
        </div>

        <div class="card">
            <div class="row">
            `)
//line album-details.qtpl:319
	for i, c := range p.Covers {
//line album-details.qtpl:319
		qw422016.N().S(`
                `)
//line album-details.qtpl:320
		if i%2 == 0 {
//line album-details.qtpl:320
			qw422016.N().S(`
                <div class="clearfix"></div>
                `)
//line album-details.qtpl:322
		}
//line album-details.qtpl:322
		qw422016.N().S(`
                <div class ="col s6">
                    <div class="row">
                        <div class="col s6">
                            <img class="materialboxed responsive-img" src="`)
//line album-details.qtpl:326
		qw422016.E().S(c.URL())
//line album-details.qtpl:326
		qw422016.N().S(`" />
                        </div>

                        <div class="col s6">
                            <div class="row">
                                <div class="col s12">
                                    <h4 class="cover-filename">`)
//line album-details.qtpl:332
		qw422016.E().S(c.Filename())
//line album-details.qtpl:332
		qw422016.N().S(`</h4>
                                </div>

                                <div class="col s6">
                                    `)
//line album-details.qtpl:337
		streammakeSelect(qw422016, selectConfig{
			label: "Cover type",

			data: c.Type(),
		})
//line album-details.qtpl:342
		qw422016.N().S(`
                                </div>

                                <div class="col s6">
                                    `)
//line album-details.qtpl:347
		streammakeIntInput(qw422016, intInputConfig{
			label:    "Sort",
			required: true,
			min:      takeIntPtr(1),

			data: c.Sort(),
		})
//line album-details.qtpl:354
		qw422016.N().S(`
                                </div>

                                <div class="col s12">
                                    <label>
                                        <input
                                            type="checkbox"
                                            name="`)
//line album-details.qtpl:361
		qw422016.E().S(c.Delete().Name)
//line album-details.qtpl:361
		qw422016.N().S(`"
                                            value="`)
//line album-details.qtpl:362
		qw422016.E().S(c.Delete().Value)
//line album-details.qtpl:362
		qw422016.N().S(`"
                                        />
                                        <span>Delete</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            `)
//line album-details.qtpl:371
	}
//line album-details.qtpl:371
	qw422016.N().S(`
            </div>
        </div>

        <div class="card" id="covers">
            <div class="row">
                <div class="col s12">
                    <div class="file-field input-field">
                        <div class="btn">
                            <span>Upload files</span>
                            <input
                                type="file"
                                name="covers"
                                accept="image/jpeg, image/png"
                                multiple
                            >
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <footer class="row" id="footer">
            <div class="col s6">
            `)
//line album-details.qtpl:398
	if p.Album.IsDraft() {
//line album-details.qtpl:398
		qw422016.N().S(`
                <button
                    class="btn waves-effect waves-light red"
                    type="submit"
                    name="delete"
                    formnovalidate
                >
                    Delete
                    <i class="material-delete right"></i>
                </button>
            `)
//line album-details.qtpl:408
	}
//line album-details.qtpl:408
	qw422016.N().S(`

            `)
//line album-details.qtpl:410
	if p.Album.MergeURL() != "" {
//line album-details.qtpl:410
		qw422016.N().S(`
                <a href="`)
//line album-details.qtpl:411
		qw422016.E().S(p.Album.MergeURL())
//line album-details.qtpl:411
		qw422016.N().S(`" class="waves-effect waves-light btn">Merge</a>
            `)
//line album-details.qtpl:412
	}
//line album-details.qtpl:412
	qw422016.N().S(`
            </div>

            <div class="col s6 right-align">
                <button class="btn waves-effect waves-light" type="submit">
                    Save
                    <i class="material-icons right"></i>
                </button>
            </div>
        </footer>
    </form>
`)
//line album-details.qtpl:423
}

//line album-details.qtpl:423
func (p *AlbumDetailsPage) WriteBody(qq422016 qtio422016.Writer) {
//line album-details.qtpl:423
	qw422016 := qt422016.AcquireWriter(qq422016)
//line album-details.qtpl:423
	p.StreamBody(qw422016)
//line album-details.qtpl:423
	qt422016.ReleaseWriter(qw422016)
//line album-details.qtpl:423
}

//line album-details.qtpl:423
func (p *AlbumDetailsPage) Body() string {
//line album-details.qtpl:423
	qb422016 := qt422016.AcquireByteBuffer()
//line album-details.qtpl:423
	p.WriteBody(qb422016)
//line album-details.qtpl:423
	qs422016 := string(qb422016.B)
//line album-details.qtpl:423
	qt422016.ReleaseByteBuffer(qb422016)
//line album-details.qtpl:423
	return qs422016
//line album-details.qtpl:423
}
