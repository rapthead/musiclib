{% code
type AlbumData interface {
    Path()           string
    Artist()         StrDatalistInputData
    Title()          StrInputData
    Type()           SelectInputData
    DownloadSource() SelectInputData
    SourceURL()      StrInputData
    Year()           IntInputData
    ReleaseYear()    IntInputData
}

type TrackData interface {
    Path()        string
    TrackArtist() StrInputData
    Title()       StrInputData
    Disc()        IntInputData
    TrackNum()    IntInputData
}

type CoverData interface {
    Filename()    string
    URL()         string
    Sort()        IntInputData
    Type()        SelectInputData
    Delete()      CheckboxInputData
}

type DraftAlbumDetailsPage struct {
    Error               error
    Album               AlbumData
    Tracks              []TrackData
    Covers              []CoverData
}

type strDatalistInputConfig struct {
    wraperClass string
    disabled    bool
    label       string
    required    bool

    data        StrDatalistInputData
}

type strInputConfig struct {
    wraperClass string
    disabled    bool
    label       string
    required    bool

    data        StrInputData
}

type intInputConfig struct {
    wraperClass string
    disabled    bool
    label       string
    required    bool

    min         *int64
    data        IntInputData
}

type selectConfig struct {
    wraperClass string
    disabled    bool
    label       string
    required    bool

    data        SelectInputData
}
%}

{% func (p *DraftAlbumDetailsPage) Title() %}
    Draft albums
{% endfunc %}

{% func (p *DraftAlbumDetailsPage) Body() %}
    <style>
        .cover-filename {
            word-break: break-all;
        }
    </style>
    <form class="container" method="POST" enctype="multipart/form-data">
        {% if p.Error != nil %}
        <div class="card-panel red white-text" id="error">
            {%s p.Error.Error() %}
        </div>
        {% endif %}
        <div class="card">
            <div class="row">
                {%=
                    makeStrDatalistInput(strDatalistInputConfig{
                        wraperClass: "col s6",
                        label: "Artist",
                        required: true,

                        data: p.Album.Artist(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        wraperClass: "col s6",
                        label: "Title",
                        required: true,

                        data: p.Album.Title(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        wraperClass: "col s6",
                        disabled: true,
                        label: "Path",

                        data: StrInputData{
                            Value: p.Album.Path(),
                        },
                    })
                %}

                {%=
                    makeIntInput(intInputConfig{
                        wraperClass: "col s6",
                        label: "Year",
                        required: true,

                        data: p.Album.Year(),
                        min: takeIntPtr(1990),
                    })
                %}

                {%=
                    makeIntInput(intInputConfig{
                        wraperClass: "col s6",
                        label: "Release year",

                        data: p.Album.ReleaseYear(),
                        min: takeIntPtr(1990),
                    })
                %}

                {%=
                    makeSelect(selectConfig{
                        wraperClass: "col s6",
                        label: "Type",
                        required: true,

                        data: p.Album.Type(),
                    })
                %}

                {%=
                    makeSelect(selectConfig{
                        wraperClass: "col s6",
                        label: "Download source",
                        required: true,

                        data: p.Album.DownloadSource(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        wraperClass: "col s6",
                        label: "Source url",

                        data: p.Album.SourceURL(),
                    })
                %}
            </div>
        </div>

        <div class="card">
            <table>
                <!--thead>
                    <tr>
                        <th>Path</th>
                        <th>Title</th>
                        <th></th>
                    </tr>
                </thead-->

                <tbody>
                    {% for _, t := range p.Tracks %}
                    <tr>
                        <th>
                            {%=
                                makeStrInput(strInputConfig{
                                    label: "Path",
                                    disabled: true,

                                    data: StrInputData{
                                        Value: t.Path(),
                                    },
                                })
                            %}
                        </th>
                        <td>
                            {%=
                                makeStrInput(strInputConfig{
                                    label: "Title",
                                    required: true,

                                    data: t.Title(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeIntInput(intInputConfig{
                                    label: "Track number",
                                    required: true,

                                    min: takeIntPtr(0),
                                    data: t.TrackNum(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeIntInput(intInputConfig{
                                    label: "Disc number",
                                    required: true,

                                    min: takeIntPtr(0),
                                    data: t.Disc(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeStrInput(strInputConfig{
                                    label: "TrackArtist",

                                    data: t.TrackArtist(),
                                })
                            %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="card">
            <div class="row">
            {% for i, c := range p.Covers %}
                {% if i % 2 == 0 %}
                <div class="clearfix"></div>
                {% endif %}
                <div class ="col s6">
                    <div class="row">
                        <div class="col s6">
                            <img class="materialboxed responsive-img" src="{%s c.URL() %}" />
                        </div>

                        <div class="col s6">
                            <div class="row">
                                <div class="col s12">
                                    <h4 class="cover-filename">{%s c.Filename() %}</h4>
                                </div>

                                <div class="col s6">
                                    {%=
                                        makeSelect(selectConfig{
                                            label: "Cover type",

                                            data: c.Type(),
                                        })
                                    %}
                                </div>

                                <div class="col s6">
                                    {%=
                                        makeIntInput(intInputConfig{
                                            label: "Sort",
                                            required: true,

                                            data: c.Sort(),
                                        })
                                    %}
                                </div>

                                <div class="col s12">
                                    <label>
                                        <input
                                            type="checkbox"
                                            name="{%s c.Delete().Name %}"
                                            value="{%s c.Delete().Value %}"
                                        />
                                        <span>Delete</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
            </div>
        </div>

        <div class="card" id="covers">
            <div class="row">
                <div class="col s12">
                    <div class="file-field input-field">
                        <div class="btn">
                            <span>Upload files</span>
                            <input
                                type="file"
                                name="covers"
                                accept="image/jpeg, image/png"
                                multiple
                            >
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <footer class="row" id="footer">
            <div class="col s6">
                <button
                    class="btn waves-effect waves-light red"
                    type="submit"
                    name="delete"
                >
                    Delete
                    <i class="material-delete right"></i>
                </button>
            </div>

            <div class="col s3 right-align">
                <button
                    class="btn waves-effect waves-light"
                    type="submit"
                    name="commit"
                >
                    Commit
                    <i class="material-icons right"></i>
                </button>
            </div>

            <div class="col s3 right-align">
                <button class="btn waves-effect waves-light" type="submit" formnovalidate>
                    Save
                    <i class="material-icons right"></i>
                </button>
            </div>
        </footer>
    </form>
{% endfunc %}

{% func makeIntInput(c intInputConfig) %}
{% code id := makeInputID(c.data.Name) %}
<div class="input-field {%s c.wraperClass %}">
    <input
        id="{%s id %}"

        {% if c.disabled %}
            disabled
        {% endif %}

        {% if c.required %}
        required
        {% endif %}

        type="number"
        class="validate"
        {% if c.data.Name != "" %}
        name="{%s c.data.Name %}"
        {% endif %}
        {% if c.data.Value != nil %}
            value="{%dl *c.data.Value %}"
        {% endif %}
        {% if c.min != nil %}
            min="{%dl *c.min %}"
        {% endif %}
    >
    <label for="{%s id %}">{%s c.label %}</label>
</div>
{% endfunc %}

{% func makeStrInput(c strInputConfig) %}
{% code id := makeInputID(c.data.Name) %}
<div class="input-field {%s c.wraperClass %}">
    <input
        id="{%s id %}"

        {% if c.disabled %}
        disabled
        {% endif %}

        {% if c.required %}
        required
        {% endif %}

        type="text"
        class="validate"
        {% if c.data.Name != "" %}
        name="{%s c.data.Name %}"
        {% endif %}
        value="{%s c.data.Value %}"
    >
    <label for="{%s id %}">{%s c.label %}</label>
</div>
{% endfunc %}

{% func makeSelect(c selectConfig) %}
{% code id := makeInputID(c.data.Name) %}
<div class="input-field {%s c.wraperClass %}">
    <select
        {% if c.data.Name != "" %}
        name="{%s c.data.Name %}"
        {% endif %}
        id="{%s id %}"
    >
        {% for _, option := range c.data.Options %}
        <option
            {% if option.Selected %}
            selected
            {% endif %}
            value="{%s option.Value %}"
            >{%s option.Label %}</option>
        {% endfor %}
    </select>
    <label for="{%s id %}">{%s c.label %}</label>
</div>
{% endfunc %}

{% func makeStrDatalistInput(c strDatalistInputConfig) %}
{% code id := makeInputID(c.data.Name) %}
{% code datalistID := id + "-datalist" %}
<div class="input-field {%s c.wraperClass %}">
    <input
        id="{%s id %}"
        list="{%s datalistID %}"

        {% if c.disabled %}
        disabled
        {% endif %}

        {% if c.required %}
        required
        {% endif %}

        type="text"
        class="validate"
        {% if c.data.Name != "" %}
        name="{%s c.data.Name %}"
        {% endif %}
        value="{%s c.data.Value %}"
    >
    <label for="{%s id %}">{%s c.label %}</label>

    <datalist id="{%s datalistID %}">
        {% for _, option := range c.data.Options %}
        <option value="{%s option %}"></option>
        {% endfor %}
    </datalist>	
</div>
{% endfunc %}
