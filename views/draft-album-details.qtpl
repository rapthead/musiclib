{% import "strconv" %}

{% code
type AlbumData interface {
    ID()             string
    Path()           string
    Artist()         string
    Title()          string
    Type()           string
    DownloadSource() string
    SourceID()       string
    Year()           *int
    ReleaseYear()    *int
}

type TrackData interface {
    ID()          string
    Path()        string
    TrackArtist() string
    Title()       string
    Disc()        *int
    TrackNum()    *int
}

type CoverData interface {
    ID()          string
    Filename()    string
    URL()         string
    Sort()        *int
    Type()        string
}

type DraftAlbumDetailsPage struct {
    AllDownloadSources  []string
    AllAlbumTypes       []string
    AllCoverTypes       []string

    Album               AlbumData
    Tracks              []TrackData
    Covers              []CoverData
}

type baseInputConfig struct {
    wraperClass string
    disabled    bool
    name        string
    label       string
}

type strInputConfig struct {
    baseInputConfig
    value       string
}

type intInputConfig struct {
    baseInputConfig
    value       *int
    min         *int
}

type selectConfig struct {
    baseInputConfig

    options     []string
    selected    string
}

func takeIntPtr(val int) *int {
    return &val
}
%}


{% func (p *DraftAlbumDetailsPage) Title() %}
    Draft albums
{% endfunc %}

{% func (p *DraftAlbumDetailsPage) Body() %}
    <form class="container" method="POST" enctype="multipart/form-data">
        <div class="card">
            <div class="row">
                <input type="hidden" name="album.id" value="{%s p.Album.ID() %}" />

                {%=
                    makeStrInput(strInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.artist",
                            label: "Draft artist",
                        },
                        value: p.Album.Artist(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.title",
                            label: "Title",
                        },
                        value: p.Album.Title(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            disabled: true,
                            name: "album.path",
                            label: "Path",
                        },
                        value: p.Album.Path(),
                    })
                %}

                {%=
                    makeIntInput(intInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.year",
                            label: "Year",
                        },
                        value: p.Album.Year(),
                        min: takeIntPtr(1990),
                    })
                %}

                {%=
                    makeIntInput(intInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.release_year",
                            label: "Release year",
                        },
                        value: p.Album.ReleaseYear(),
                        min: takeIntPtr(1990),
                    })
                %}

                {%=
                    makeSelect(selectConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.type",
                            label: "Type",
                        },

                        options:  p.AllAlbumTypes,
                        selected: p.Album.Type(),
                    })
                %}

                {%=
                    makeSelect(selectConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.download_source",
                            label: "Download source",
                        },

                        options:  p.AllDownloadSources,
                        selected: p.Album.DownloadSource(),
                    })
                %}

                {%=
                    makeStrInput(strInputConfig{
                        baseInputConfig: baseInputConfig{
                            wraperClass: "col s6",
                            name: "album.source_id",
                            label: "Source id",
                        },

                        value: p.Album.SourceID(),
                    })
                %}
            </div>
        </div>

        <div class="card">
            <table>
                <!--thead>
                    <tr>
                        <th>Path</th>
                        <th>Title</th>
                        <th></th>
                    </tr>
                </thead-->

                <tbody>
                    {% for i, t := range p.Tracks %}
                    <tr>
                        <th>
                            <input
                                type="hidden"
                                name="{%s "tracks." + strconv.Itoa(i) + ".id" %}"
                                value="{%s t.ID() %}"
                            />

                            {%=
                                makeStrInput(strInputConfig{
                                    baseInputConfig: baseInputConfig{
                                        name: "tracks." + strconv.Itoa(i) + ".path",
                                        label: "Path",
                                        disabled: true,
                                    },

                                    value: t.Path(),
                                })
                            %}
                        </th>
                        <td>
                            {%=
                                makeStrInput(strInputConfig{
                                    baseInputConfig: baseInputConfig{
                                        name: "tracks." + strconv.Itoa(i) + ".title",
                                        label: "Title",
                                    },

                                    value: t.Title(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeIntInput(intInputConfig{
                                    baseInputConfig: baseInputConfig{
                                        name: "tracks." + strconv.Itoa(i) + ".track_num",
                                        label: "Track number",
                                    },

                                    min: takeIntPtr(0),
                                    value: t.TrackNum(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeIntInput(intInputConfig{
                                    baseInputConfig: baseInputConfig{
                                        name: "tracks." + strconv.Itoa(i) + ".disc",
                                        label: "Disc number",
                                    },

                                    min: takeIntPtr(0),
                                    value: t.Disc(),
                                })
                            %}
                        </td>
                        <td>
                            {%=
                                makeStrInput(strInputConfig{
                                    baseInputConfig: baseInputConfig{
                                        name: "tracks." + strconv.Itoa(i) + ".track_artist",
                                        label: "TrackArtist",
                                    },

                                    value: t.TrackArtist(),
                                })
                            %}
                        </td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>

        <div class="card">
            <div class="row">
            {% for i, c := range p.Covers %}
                {% if i % 2 == 0 %}
                <div class="clearfix"></div>
                {% endif %}
                <div class ="col s6">
                    <div class="row">
                        <div class="col s6">
                            <input
                                type="hidden"
                                name="{%s "covers." + strconv.Itoa(i) + ".id" %}"
                                value="{%s c.ID() %}"
                            />

                            <img class="materialboxed responsive-img" src="{%s c.URL() %}" />
                        </div>

                        <div class="col s6">
                            <div class="row">
                                <div class="col s12">
                                    <h4>{%s c.Filename() %}</h4>
                                </div>

                                <div class="col s6">
                                    {%=
                                        makeSelect(selectConfig{
                                            baseInputConfig: baseInputConfig{
                                                name: "covers." + strconv.Itoa(i) + ".type",
                                                label: "Cover type",
                                            },

                                            options:  p.AllCoverTypes,
                                            selected: c.Type(),
                                        })
                                    %}
                                </div>

                                <div class="col s6">
                                    {%=
                                        makeIntInput(intInputConfig{
                                            baseInputConfig: baseInputConfig{
                                                name: "covers." + strconv.Itoa(i) + ".sort",
                                                label: "Sort",
                                            },

                                            min: takeIntPtr(0),
                                            value: c.Sort(),
                                        })
                                    %}
                                </div>

                                <div class="col s12">
                                    <label>
                                        <input
                                            type="checkbox"
                                            name="{%s "delete_covers" %}"
                                            value="{%s c.ID() %}"
                                        />
                                        <span>Delete</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            {% endfor %}
            </div>
        </div>

        <div class="card" id="covers">
            <div class="row">
                <div class="col s12">
                    <div class="file-field input-field">
                        <div class="btn">
                            <span>Upload files</span>
                            <input
                                type="file"
                                name="covers"
                                accept="image/jpeg, image/png"
                                multiple
                            >
                        </div>
                        <div class="file-path-wrapper">
                            <input class="file-path validate" type="text">
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <footer class="row right-align">
            <button id="submit-button" class="btn waves-effect waves-light" type="submit">
                Save
                <i class="material-icons right"></i>
            </button>
        </footer>
    </form>
{% endfunc %}

{% func makeIntInput(c intInputConfig) %}
<div class="input-field {%s c.wraperClass %}">
    <input
        id="{%s c.name %}"
        {% if c.disabled %}
            disabled
        {% endif %}
        type="number"
        class="validate"
        name="{%s c.name %}"
        {% if c.value != nil %}
            value="{%d *c.value %}"
        {% endif %}
        {% if c.min != nil %}
            min="{%d *c.min %}"
        {% endif %}
    >
    <label for="{%s c.name %}">{%s c.label %}</label>
</div>
{% endfunc %}

{% func makeStrInput(c strInputConfig) %}
<div class="input-field {%s c.wraperClass %}">
    <input
        id="{%s c.name %}"
        {% if c.disabled %}
            disabled
        {% endif %}
        type="text"
        class="validate"
        name="{%s c.name %}"
        value="{%s c.value %}"
    >
    <label for="{%s c.name %}">{%s c.label %}</label>
</div>
{% endfunc %}

{% func makeSelect(c selectConfig) %}
<div class="input-field {%s c.wraperClass %}">
    <select
        name="{%s c.name %}"
        id="{%s c.name %}"
    >
        {% for _, option := range c.options %}
        <option
            {% if option == c.selected %}
            selected
            {% endif %}
            value="{%s option %}"
            >{%s option %}</option>
        {% endfor %}
    </select>
    <label for="{%s c.name %}">{%s c.label %}</label>
</div>
{% endfunc %}
